// Copyright 2024 wuzhanfly <wuzhanfly@gmail.com>. All rights reserved.
// Use of this source code is governed by a AGPL v3.0 style
// license that can be found in the LICENSE file.

// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ConfigMidjourneyDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type ConfigMidjourneyDao struct {
	gmvc.M                          // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB                  // DB is the raw underlying database management object.
	Table   string                  // Table is the table name of the DAO.
	Columns configMidjourneyColumns // Columns contains all the columns of Table that for convenient usage.
}

// ConfigMidjourneyColumns defines and stores column names for table c_config_midjourney.
type configMidjourneyColumns struct {
	Id               string // ID
	Title            string // 标题
	GuildId          string // 服务ID
	ChannelId        string // 频道ID
	UserToken        string // 用户Token
	MjBotId          string // midjourney的BotId
	BotToken         string // 自己的BotToken
	SessionId        string // SessionID
	UserAgent        string // UserAgent
	HuggingFaceToken string // HuggingFaceToken
	Proxy            string // 代理地址
	Status           string // 是否启用 1启用 0不启用
	ListenModel      string // 监听模式 1userWss 0bot
	CreateModel      string // 生成图的模式 fast relax turbo
	WsIdleTime       string // websocket闲置时间秒数
	CallNum          string // 接口调用次数
	CreatedAt        string // 创建时间
	UpdatedAt        string // 更新时间
}

func NewConfigMidjourneyDao() *ConfigMidjourneyDao {
	return &ConfigMidjourneyDao{
		M:     g.DB("default").Model("c_config_midjourney").Safe(),
		DB:    g.DB("default"),
		Table: "c_config_midjourney",
		Columns: configMidjourneyColumns{
			Id:               "id",
			Title:            "title",
			GuildId:          "guild_id",
			ChannelId:        "channel_id",
			UserToken:        "user_token",
			MjBotId:          "mj_bot_id",
			BotToken:         "bot_token",
			SessionId:        "session_id",
			UserAgent:        "user_agent",
			HuggingFaceToken: "hugging_face_token",
			Proxy:            "proxy",
			Status:           "status",
			ListenModel:      "listen_model",
			CreateModel:      "create_model",
			WsIdleTime:       "ws_idle_time",
			CallNum:          "call_num",
			CreatedAt:        "created_at",
			UpdatedAt:        "updated_at",
		},
	}
}
