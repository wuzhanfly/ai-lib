// Copyright 2024 wuzhanfly <wuzhanfly@gmail.com>. All rights reserved.
// Use of this source code is governed by a AGPL v3.0 style
// license that can be found in the LICENSE file.

// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ConfigPayDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type ConfigPayDao struct {
	gmvc.M                   // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB           // DB is the raw underlying database management object.
	Table   string           // Table is the table name of the DAO.
	Columns configPayColumns // Columns contains all the columns of Table that for convenient usage.
}

// ConfigPayColumns defines and stores column names for table c_config_pay.
type configPayColumns struct {
	Id                  string // ID
	ApiName             string // 支付方式名称
	Params              string // 配置参数json
	PayChannel          string // 支付渠道的配置json
	FrontendDescription string // 支付方式描述
	BackendDescription  string // 支付方式后台描述
	Status              string // 状态
	CreatedAt           string // 创建时间
	UpdatedAt           string // 更新时间
}

func NewConfigPayDao() *ConfigPayDao {
	return &ConfigPayDao{
		M:     g.DB("default").Model("c_config_pay").Safe(),
		DB:    g.DB("default"),
		Table: "c_config_pay",
		Columns: configPayColumns{
			Id:                  "id",
			ApiName:             "api_name",
			Params:              "params",
			PayChannel:          "pay_channel",
			FrontendDescription: "frontend_description",
			BackendDescription:  "backend_description",
			Status:              "status",
			CreatedAt:           "created_at",
			UpdatedAt:           "updated_at",
		},
	}
}
