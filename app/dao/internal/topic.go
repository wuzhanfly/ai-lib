// Copyright 2024 wuzhanfly <wuzhanfly@gmail.com>. All rights reserved.
// Use of this source code is governed by a AGPL v3.0 style
// license that can be found in the LICENSE file.

// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// TopicDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type TopicDao struct {
	gmvc.M               // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB       // DB is the raw underlying database management object.
	Table   string       // Table is the table name of the DAO.
	Columns topicColumns // Columns contains all the columns of Table that for convenient usage.
}

// TopicColumns defines and stores column names for table c_topic.
type topicColumns struct {
	Id        string // ID
	UserId    string // 会员ID
	Title     string // 话题标题
	Type      string // 话题类型 1:gpt3.5 2:gpt4 3:midjourney
	CreatedAt string // 创建时间
	UpdatedAt string // 更新时间
}

func NewTopicDao() *TopicDao {
	return &TopicDao{
		M:     g.DB("default").Model("c_topic").Safe(),
		DB:    g.DB("default"),
		Table: "c_topic",
		Columns: topicColumns{
			Id:        "id",
			UserId:    "user_id",
			Title:     "title",
			Type:      "type",
			CreatedAt: "created_at",
			UpdatedAt: "updated_at",
		},
	}
}
